# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import online.rpc.segment_pb2 as segment__pb2


class SegmentStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.seg = channel.unary_unary(
                '/Segment/seg',
                request_serializer=segment__pb2.SegRequest.SerializeToString,
                response_deserializer=segment__pb2.SegResponse.FromString,
                )
        self.pos = channel.unary_unary(
                '/Segment/pos',
                request_serializer=segment__pb2.SegRequest.SerializeToString,
                response_deserializer=segment__pb2.PosResponse.FromString,
                )
        self.add_word = channel.unary_unary(
                '/Segment/add_word',
                request_serializer=segment__pb2.AddWordRequest.SerializeToString,
                response_deserializer=segment__pb2.Bool.FromString,
                )
        self.delete_word = channel.unary_unary(
                '/Segment/delete_word',
                request_serializer=segment__pb2.DeleteWordRequest.SerializeToString,
                response_deserializer=segment__pb2.Bool.FromString,
                )


class SegmentServicer(object):
    """Missing associated documentation comment in .proto file."""

    def seg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_word(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_word(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SegmentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'seg': grpc.unary_unary_rpc_method_handler(
                    servicer.seg,
                    request_deserializer=segment__pb2.SegRequest.FromString,
                    response_serializer=segment__pb2.SegResponse.SerializeToString,
            ),
            'pos': grpc.unary_unary_rpc_method_handler(
                    servicer.pos,
                    request_deserializer=segment__pb2.SegRequest.FromString,
                    response_serializer=segment__pb2.PosResponse.SerializeToString,
            ),
            'add_word': grpc.unary_unary_rpc_method_handler(
                    servicer.add_word,
                    request_deserializer=segment__pb2.AddWordRequest.FromString,
                    response_serializer=segment__pb2.Bool.SerializeToString,
            ),
            'delete_word': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_word,
                    request_deserializer=segment__pb2.DeleteWordRequest.FromString,
                    response_serializer=segment__pb2.Bool.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Segment', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Segment(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def seg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Segment/seg',
            segment__pb2.SegRequest.SerializeToString,
            segment__pb2.SegResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Segment/pos',
            segment__pb2.SegRequest.SerializeToString,
            segment__pb2.PosResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add_word(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Segment/add_word',
            segment__pb2.AddWordRequest.SerializeToString,
            segment__pb2.Bool.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_word(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Segment/delete_word',
            segment__pb2.DeleteWordRequest.SerializeToString,
            segment__pb2.Bool.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
